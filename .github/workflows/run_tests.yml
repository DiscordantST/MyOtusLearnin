name: Run tests for homework

on: [push]

jobs:
  homework-tests:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: secretpassword
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432


    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    - name: Install inner (homework-level) dependencies
      run: |
        for d in homework_* ; do
          HW_REQUIREMENTS_PATH="$d/requirements.txt"
            if [ -f "$HW_REQUIREMENTS_PATH" ];
            then
              echo file \'"$HW_REQUIREMENTS_PATH"\' exists, installing...
              pip install -r "$HW_REQUIREMENTS_PATH";
            fi
        done
    - name: Install project-level dependencies
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest testing -s -vv -rsx
      env:
        SQLALCHEMY_PG_CONN_URI: postgresql+asyncpg://postgres:secretpassword@localhost:5432/postgres



  django_project:
    needs: homework-tests
    # This workflow contains a single job called "build"
    build:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # Add in environment variables for the entire "build" job
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_HOST: localhost # default host value for the database
        POSTGRES_DB: djtesting
        POSTGRES_PORT: 5432
        DJANGO_SECRET_KEY: test-key-not-good
      services:
        postgres_main:
          image: postgres:12
          env:
            POSTGRES_USER: ${{ env.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
            POSTGRES_DB: ${{ env.POSTGRES_DB }}
          ports:
            - 5432:5432
          options: >-
            --health-cmd pg_isready 
            --health-interval 10s 
            --health-timeout 5s 
            --health-retries 5
      # If you want to test multiple python version(s)
      strategy:
        matrix:
          python-version: ["3.8"] # ["3.8", "3.9", "3.10"]
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Setup Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install requirements
          run: |
            pip install -r requirements.txt
        - name: Run Tests
          # Step specific environment variables
          env:
            DEBUG: "0"
            DJANGO_SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
            DB_USERNAME: ${{ env.POSTGRES_USER }}
            DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
            DB_HOST: ${{ env.POSTGRES_HOST }}
            DB_DATABASE: ${{ env.POSTGRES_DB }}
            DB_PORT: ${{ env.POSTGRES_PORT }}
          run: |
            cd "./homework_10/blog_project_otus_homework"
            python manage.py test
#    - name: Django
#      run: |
#        cd "./homework_10/blog_project_otus_homework"
#        python manage.py test
        
